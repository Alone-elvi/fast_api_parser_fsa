version: '3.8'

networks:
  fsa_network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - fsa_network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - fsa_network

  clickhouse:
    image: clickhouse/clickhouse-server:24.3.6
    container_name: clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - ./migrations/clickhouse/clickhouse_init.sql:/docker-entrypoint-initdb.d/clickhouse_init.sql
      - ./migrations/clickhouse/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    networks:
      - fsa_network
    cap_add:
      - SYS_NICE
      - NET_ADMIN
      - IPC_LOCK
      - SYS_PTRACE
    environment:
      CLICKHOUSE_DB: analytics_db
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2g
        reservations:
          memory: 1g
    restart: always

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fsa_parser_db
    ports:
      - "5437:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fsa_network
    volumes:
      - ./migrations/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./migrations/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

  ingestion_service:
    build:
      context: .
      dockerfile: ./app/ingestion_service/Dockerfile
    volumes:
      - ./app:/app
    ports:
      - "8001:8001"
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
      KAFKA_BROKER_URL: kafka:9092
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fsa_parser_db
    command: ["dockerize", "-wait", "tcp://kafka:9092", "-wait", "tcp://postgres:5432", "-timeout", "300s", 
              "uvicorn", "ingestion_service.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload", "--log-level", "info"]
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - fsa_network

  processing_service:
    build:
      context: .
      dockerfile: ./app/processing_service/Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    volumes:
      - ./app/common:/app/common
      - ./app/processing_service:/app/processing_service
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
      KAFKA_BROKER_URL: kafka:9092
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fsa_parser_db
    command: >
      /bin/sh -c "chmod +x /app/wait-for-it.sh &&  /app/wait-for-it.sh kafka:9092 --timeout=300 --strict --  /app/wait-for-it.sh postgres:5432 --timeout=300 --strict --  /app/wait-for-it.sh clickhouse:8123 --timeout=300 --strict --  python main.py"
    user: root
    restart: on-failure
    networks:
      - fsa_network

  analytics_service:
    build:
      context: .
      dockerfile: ./app/analytics_service/Dockerfile
    volumes:
      - ./app:/app
    ports:
      - "8002:8002"
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fsa_parser_db
    command: ["dockerize", "-wait", "tcp://clickhouse:8123", "-wait", "tcp://postgres:5432", "-timeout", "300s", 
              "uvicorn", "analytics_service.main:app", "--host", "0.0.0.0", "--port", "8002", "--reload", "--log-level", "info"]
    depends_on:
      clickhouse:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - fsa_network
    restart: on-failure

volumes:
  clickhouse_data:
  clickhouse_logs:
